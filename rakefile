require 'rake'
require 'erb'

desc "Install dotfiles into HOME directory"
task :install do
  # replace_all = false
  Dir['*'].each do |file|
    # Exclude this file (rakefile)
    next if %w[rakefile].include? file

    if File.exist?(File.join(ENV['HOME'], ".#{file.sub('.erb', '')}"))
      if File.identical? file, File.join(ENV['HOME'], ".#{file.sub('.erb', '')}")
        puts "Identical ~/.#{file.sub('.erb', '')}"
      else
        print "Overwrite ~/.#{file.sub('.erb', '')}? (yes (n)o (q)uit)"
        case $stdin.gets.chomp
        when 'yes'
            replace_file(file)
        when 'q'
          exit
        else
          puts "Skipping ~/.#{file.sub('.erb', '')}"
        end
      end
    else
      link_file(file)
    end
  end
end

def replace_file(file)
  system %Q{rm -irf "$HOME/.#{file.sub('.erb', '')}"}
  link_file(file)
end

def link_file(file)
  if file =~ /.erb$/
    puts "Generating ~/.#{file.sub('.erb', '')}"
    File.open(File.join(ENV['HOME'], ".#{file.sub('.erb', '')}"), 'w') do |new_file|
      new_file.write ERB.new(File.read(file)).result(binding)
    end
  else
    puts "Linking ~/.#{file}"
    system %Q{ln -s "$PWD/#{file}" "$HOME/.#{file}"}
  end
end

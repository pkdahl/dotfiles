# -*- mode: shell-script; fill-column: 72; -*-
# ~/.profile

export XDG_CACHE_HOME=$HOME/.cache
export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share
export ETC_HOME=$HOME/.local/etc

## XDG user dirs

export XDG_DESKTOP_DIR="$HOME/Desktop"
export XDG_DOWNLOAD_DIR="$HOME/Downloads"
# XDG_TEMPLATES_DIR
# XDG_PUBLICSHARE_DIR
export XDG_DOCUMENTS_DIR="$HOME/Documents"
export XDG_MUSIC_DIR="$HOME/Music"
export XDG_PICTURES_DIR="$HOME/Pictures"
export XDG_VIDEOS_DIR="$HOME/Movies"

## Other dirs

export SH_CONFIG_HOME="$XDG_CONFIG_HOME/sh"

export BASH_CACHE_HOME="$XDG_CACHE_HOME/bash"
export BASH_CONFIG_HOME="$XDG_CONFIG_HOME/bash"

export ZSH_CACHE_HOME="$XDG_CACHE_HOME/zsh"
export ZSH_CONFIG_HOME="$XDG_CONFIG_HOME/zsh"
export ZSH_DATA_HOME="$XDG_DATA_HOME/zsh"
export DOT_ZSH="$ZSH_CONFIG_HOME"

export DOTFILES="$HOME/.dotfiles"

# Homebrew

if [ -e "/opt/homebrew" ]; then
	export HOMEBREW_PREFIX="/opt/homebrew";
	export HOMEBREW_CASK_OPTS="--appdir=/Applications";
elif [ -x "/usr/local/bin/brew" ]; then
	export HOMEBREW_PREFIX="/usr/local";
	export HOMEBREW_CASK_OPTS="--appdir=/Applications";
elif [ -e "$HOME/.linuxbrew" ]; then
	export HOMEBREW_PREFIX="$HOME/.linuxbrew";
fi

export HOMEBREW_CELLAR="$HOMEBREW_PREFIX/Cellar";
export HOMEBREW_REPOSITORY="$HOMEBREW_PREFIX";
export HOMEBREW_SHELLENV_PREFIX="$HOMEBREW_PREFIX";
export HOMEBREW_NO_GITHUB_API=1;
export PATH="$HOMEBREW_PREFIX/bin:$HOMEBREW_PREFIX/sbin${PATH+:$PATH}";
export MANPATH="$HOMEBREW_PREFIX/share/man${MANPATH+:$MANPATH}:";
export INFOPATH="$HOMEBREW_PREFIX/share/info:${INFOPATH:-}";


# Pass 

export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"


MAUDE_LIB="$HOME/.local/lib/maude"
if [ -d "$MAUDE_LIB" ]; then
    export MAUDE_LIB
fi

export CABAL_DIR="$HOME/.local/opt/cabal"
export CABAL_CONFIG="$XDG_CONFIG_HOME/cabal/config"
export STACK_ROOT="$HOME/.local/opt/stack"

export OPAMROOT="$HOME/.local/opt/opam"

NODE_PATH="$XDG_DATA_HOME/node"
if [ -d "$NODE_PATH" ]; then
    export NODE_PATH
fi

NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
if [ -r "$NPM_CONFIG_USERCONFIG" ]; then
    export NPM_CONFIG_USERCONFIG
fi

export CARGO_HOME="$HOME/.local/opt/cargo"
export RUSTUP_HOME="$HOME/.local/opt/rustup"
source "$CARGO_HOME/env"

MAILDIR="$HOME/Maildir"
if [ -d "$MAILDIR" ]; then
    export MAILDIR
fi

IMAPFILTER_HOME="$XDG_CONFIG_HOME/imapfilter"
if [ -d "$IMAPFILTER_HOME" ]; then
    export IMAPFILTER_HOME
fi

export _Z_DATA="$XDG_CACHE_HOME/z/directories"

# PATH

# PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:$PATH

if [ -d "$HOME/bin" ]; then
    PATH="$HOME/bin:$PATH"
fi

if [ -d "$HOME/.local/opt/cargo/bin" ]; then
    PATH="$HOME/.local/opt/cargo/bin:$PATH"
elif [ -d "$HOME/.cargo/bin" ]; then
    PATH="$HOME/.cargo/bin:$PATH"
fi

# Set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ]; then
    PATH="$HOME/.local/bin:$PATH"
fi

# Unique entries in PATH
PATH=$(printf %s "$PATH" | awk -v RS=: '!a[$0]++' | paste -s -d: -)

export PATH

if [ -d "$XDG_DATA_HOME/man" ]; then
    MANPATH="$XDG_DATA_HOME/man:$(man -w)"
    MANPATH=$(printf %s "$MANPATH" | awk -v RS=: '!a[$0]++' | paste -s -d: -)
    export MANPATH
fi


# Set EDITOR
if type nvim > /dev/null 2>&1; then
    export EDITOR="nvim"
else
    export EDITOR="vim"
fi

if [ -r "$XDG_DOCUMENTS_DIR/.profile" ]; then
    source "$XDG_DOCUMENTS_DIR/.profile"
fi

if [ -d "$ETC_HOME/profile.d" ]; then
    for f in "$ETC_HOME/profile.d"/*; do
        source $f
    done
fi
